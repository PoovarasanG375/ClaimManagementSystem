
@model IEnumerable<Insuranceclaim.Models.Policy>

@{

    Layout = "~/Views/Shared/_AdminLayout.cshtml";

    ViewData["Title"] = "Policy Management";

}

<style>

    /* Main container styling for the grid layout */

    .policy-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
        margin-top: 20px;
    }

    /* Styling for each individual policy card */

    .policy-card {
        background-color: #ffffff;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }

        /* Policy card content details */

        .policy-card h3 {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 10px;
        }

        .policy-card p {
            margin: 5px 0;
            font-size: 0.95rem;
            color: #555;
        }

            .policy-card p strong {
                color: #333;
            }

    /* Container for action buttons at the bottom of the card */

    .card-actions {
        margin-top: 15px;
        display: flex;
        justify-content: flex-end; /* Aligns buttons to the right */

        gap: 10px; /* Adds space between the buttons */
    }

    /* The "Create Policy" button at the top of the page */

    .btn-create-policy {
        margin-bottom: 20px;
    }

    /* Style overrides for the Bootstrap buttons to match the colors */

    .btn-warning {
        background-color: #ffc107; /* Yellow color */

        border-color: #ffc107;
        color: #333;
    }

        .btn-warning:hover {
            background-color: #e0a800; /* Darker yellow on hover */

            border-color: #d39e00;
        }

    .btn-danger {
        background-color: #dc3545; /* Red color */

        border-color: #dc3545;
    }

    .btn-success {
        background-color: #28a745; /* Green color for Activate and Create */

        border-color: #28a745;
    }

    .btn-info {
        background-color: #17a2b8;
        border-color: #17a2b8;
    }

    /* Styling for the filter form and dropdowns */

    .row.mb-3.align-items-end {
        margin-bottom: 1rem !important; /* Spacing below the filters */
    }
</style>

<div class="main-content">
    <div class="d-flex justify-content-between align-items-center mt-4">
        <h2>Policy Management</h2>
        <button type="button" class="btn btn-success btn-create-policy" data-bs-toggle="modal" data-bs-target="#addPolicyModal">

            Create Policy
        </button>
    </div>

    <form asp-action="Index" method="get" class="row mb-3 align-items-end">
        <div class="col-md-3">
            <label for="category">Filter by Category</label>
            <select name="category" class="form-control" onchange="this.form.submit()">
                <option value="All">All Categories</option>

                @foreach (var cat in ViewBag.Categories)

                {
                    <option value="@cat" selected="@(cat == ViewBag.SelectedCategory)">@cat</option>

                }
            </select>
        </div>
        <div class="col-md-3">
            <label for="status">Filter by Status</label>
            <select name="status" class="form-control" onchange="this.form.submit()">
                <option value="All">All Statuses</option>

                @foreach (var stat in ViewBag.Statuses)

                {
                    <option value="@stat" selected="@(stat == ViewBag.SelectedStatus)">@stat</option>

                }
            </select>
        </div>
    </form>

    <div class="policy-grid">

        @if (Model.Any())

        {

            @foreach (var policy in Model)

            {
                <div class="policy-card">
                    <div>
                        <h3>@policy.PolicyName</h3>
                        <p><strong>Policy Number:</strong> @policy.PolicyNumber</p>
                        <p><strong>Category:</strong> @policy.Category</p>
                        <p><strong>Description:</strong> @policy.Description</p>
                        <p><strong>Coverage:</strong> ₹@policy.CoverageAmount?.ToString("N0")</p>
                        <p><strong>Premium:</strong> ₹@policy.AnnualPremium?.ToString("N0")/year</p>
                        <p><strong>Status:</strong> @policy.PolicyStatus.ToUpper()</p>

                        @if (policy.CreatedDate.HasValue)

                        {
                            <p><strong>Created Date:</strong> @policy.CreatedDate.Value.ToShortDateString()</p>

                        }
                    </div>
                    <div class="card-actions">
                        <button type="button" class="btn btn-info" data-bs-toggle="modal" data-bs-target="#editPolicyModal" data-policy-id="@policy.PolicyId" data-policy-name="@policy.PolicyName" data-policy-category="@policy.Category" data-coverage-amount="@policy.CoverageAmount" data-premium="@policy.AnnualPremium" data-description="@policy.Description">

                            Edit
                        </button>

                        <form asp-action="ToggleStatus" asp-route-id="@policy.PolicyId" method="post">
                            <button type="submit" class="btn @(policy.PolicyStatus == "ACTIVE" ? "btn-warning" : "btn-success")">

                                @(policy.PolicyStatus == "ACTIVE" ? "Deactivate" : "Activate")
                            </button>
                        </form>
                        <form asp-action="Delete" asp-route-id="@policy.PolicyId" method="post" onsubmit="return confirm('Are you sure you want to delete this policy?');">
                            <button type="submit" class="btn btn-danger">Delete</button>
                        </form>
                    </div>
                </div>

            }

        }

        else

        {
            <div class="alert alert-info text-center">

                No policies found that match the selected filters.
            </div>

        }
    </div>
</div>

<div class="modal fade" id="addPolicyModal" tabindex="-1" aria-labelledby="addPolicyModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addPolicyModalLabel">Add New Policy</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form asp-action="Create" asp-controller="AdminPolicies" method="post">
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="policyNumber" class="form-label">Policy Number</label>
                        <input type="text" class="form-control" id="policyNumber" name="PolicyNumber" required>
                    </div>
                    <div class="mb-3">
                        <label for="policyCategory" class="form-label">Category</label>
                        <input type="text" class="form-control" id="policyCategory" name="Category" required>
                    </div>
                    <div class="mb-3">
                        <label for="policyType" class="form-label">Type</label>
                        <select class="form-select" id="policyType" name="Type" required>
                            <option value="">--Select--</option>
                            <option value="Basic">BASIC</option>
                            <option value="Advanced">ADVANCED</option>
                            <option value="Premium">PREMIUM</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="policyName" class="form-label">Policy Name</label>
                        <input type="text" class="form-control" id="policyName" name="PolicyName" readonly required>
                    </div>
                    <div class="mb-3">
                        <label for="coverageAmount" class="form-label">Coverage Amount</label>
                        <input type="number" class="form-control" id="coverageAmount" name="CoverageAmount" required>
                    </div>
                    <div class="mb-3">
                        <label for="premium" class="form-label">Premium</label>
                        <input type="number" class="form-control" id="premium" name="Premium" required>
                    </div>
                    <div class="mb-3">
                        <label for="policyDescription" class="form-label">Description</label>
<textarea class="form-control" id="policyDescription" name="Description" rows="3"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="policyStatus" class="form-label">Status</label>
                        <select class="form-select" id="policyStatus" name="PolicyStatus" required>
                            <option value="ACTIVE">ACTIVE</option>
                            <option value="INACTIVE">INACTIVE</option>
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save Policy</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="editPolicyModal" tabindex="-1" aria-labelledby="editPolicyModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editPolicyModalLabel">Edit Policy</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="editPolicyForm" asp-action="Edit" asp-controller="AdminPolicies" method="post">
                <div class="modal-body">
                    <input type="hidden" id="edit-policyId" name="PolicyId" />
                    <div class="mb-3">
                        <label for="edit-policyName" class="form-label">Policy Name</label>
                        <input type="text" class="form-control" id="edit-policyName" name="PolicyName" required>
                    </div>
                    <div class="mb-3">
                        <label for="edit-category" class="form-label">Category</label>
                        <input type="text" class="form-control" id="edit-category" name="Category" required>
                    </div>
                    <div class="mb-3">
                        <label for="edit-coverageAmount" class="form-label">Coverage Amount</label>
                        <input type="number" class="form-control" id="edit-coverageAmount" name="CoverageAmount" required>
                    </div>
                    <div class="mb-3">
                        <label for="edit-premium" class="form-label">Premium</label>
                        <input type="number" class="form-control" id="edit-premium" name="Premium" required>
                    </div>
                    <div class="mb-3">
                        <label for="edit-description" class="form-label">Description</label>
<textarea class="form-control" id="edit-description" name="Description" rows="3"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>

        document.addEventListener('DOMContentLoaded', function () {

            // JavaScript to populate the edit modal with policy data

            document.getElementById('editPolicyModal').addEventListener('show.bs.modal', function (event) {

                var button = event.relatedTarget;

                var policyId = button.getAttribute('data-policy-id');

                var policyName = button.getAttribute('data-policy-name');

                var policyCategory = button.getAttribute('data-policy-category');

                var coverageAmount = button.getAttribute('data-coverage-amount');

                var premium = button.getAttribute('data-premium');

                var description = button.getAttribute('data-description');

                var modal = this;

                modal.querySelector('#edit-policyId').value = policyId;

                modal.querySelector('#edit-policyName').value = policyName;

                modal.querySelector('#edit-category').value = policyCategory;

                modal.querySelector('#edit-coverageAmount').value = coverageAmount;

                modal.querySelector('#edit-premium').value = premium;

                modal.querySelector('#edit-description').value = description;

            });

            // JavaScript for auto-populating policy name in the Add New Policy modal

            const policyCategory = document.getElementById('policyCategory');

            const policyType = document.getElementById('policyType');

            const policyName = document.getElementById('policyName');

            function updatePolicyName() {

                const categoryValue = policyCategory.value;

                const typeValue = policyType.value;

                if (categoryValue && typeValue) {

                    // Concatenate the values and set them to the policyName field

                    policyName.value = categoryValue + ' ' + typeValue;

                } else {

                    // Clear the policyName field if either category or type is empty

                    policyName.value = '';

                }

            }

            // Listen for changes on both the category and type fields

            policyCategory.addEventListener('input', updatePolicyName);

            policyType.addEventListener('change', updatePolicyName);

            // AJAX submit for Edit Policy form

            document.getElementById('editPolicyForm').addEventListener('submit', function (e) {

                e.preventDefault();

                var form = this;

                var formData = new FormData(form);

                fetch(form.action, {

                    method: 'POST',

                    body: formData

                })

                .then(response => {

                    if (response.ok) {

                        // Close the modal

                        var editModal = bootstrap.Modal.getInstance(document.getElementById('editPolicyModal'));

                        editModal.hide();

                        // Optionally, reload the page or update the card in-place

                        location.reload();

                    } else {

                        // Handle validation errors if needed

                        alert('Failed to update policy.');

                    }

                });

            });

        });
    </script>

}


