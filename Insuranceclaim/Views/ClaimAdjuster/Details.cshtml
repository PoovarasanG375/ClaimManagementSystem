@model Insuranceclaim.Models.Claim

@{

    ViewData["Title"] = "Claim Details";

    Layout = null;

}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap" rel="stylesheet">
    <style>

        :root {
            --primary-color: #488AFB;
            --secondary-color: #f0f4f8;
            --text-dark: #333;
            --text-light: #555;
            --border-color: #e0e6ed;
            --shadow-light: 0 4px 12px rgba(0, 0, 0, 0.08);
            --shadow-hover: 0 8px 24px rgba(0, 0, 0, 0.12);
        }

        body {
            background-color: var(--secondary-color);
            font-family: 'Poppins', sans-serif;
            color: var(--text-light);
        }

        .navbar {
            background-image: linear-gradient(to right, #4d657e, #344f6c,#344f6c, #012347);
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .navbar-brand, .nav-link {
            color: white !important;
            font-weight: 600;
        }

        .logout-btn {
            color: white;
            text-decoration: none;
            font-weight: 500;
        }

        .container {
            background-color: white;
            padding: 2.5rem;
            border-radius: 10px;
            box-shadow: var(--shadow-light);
            max-width: 800px;
            margin-top: 50px;
            transition: box-shadow 0.3s ease;
        }

            .container:hover {
                box-shadow: var(--shadow-hover);
            }

        h2 {
            font-weight: 600;
            color: #012347;
            text-align: center;
            margin-bottom: 2rem;
        }

        .details-label {
            font-weight: 600;
            color: var(--text-dark);
            display: block;
            margin-bottom: 0.25rem;
            font-size: 0.95rem;
        }

        .details-value {
            font-size: 1rem;
            color: var(--text-light);
            padding: 0.75rem 1rem;
            background-color: #f8f9fa;
            border-radius: 8px;
            border: 1px solid var(--border-color);
        }

        .form-label {
            font-weight: 600;
            color: var(--text-dark);
        }

        .form-control, .form-select {
            border-radius: 8px;
            border-color: var(--border-color);
            padding: 0.75rem 1rem;
        }

        #claim-status {
            width: auto;
        }

        .btn-primary {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
            border-radius: 8px;
            transition: background-color 0.3s ease;
        }

            .btn-primary:hover {
                background-color: #3876d1;
                border-color: #3876d1;
            }

        .btn-secondary {
            border-radius: 8-px;
            color: var(--text-dark);
            background-color: var(--border-color);
            border-color: var(--border-color);
        }

            .btn-secondary:hover {
                background-color: #d1d9e0;
                border-color: #d1d9e0;
            }

        hr {
            border-top: 1px solid var(--border-color);
            margin: 2rem 0;
        }

        .status-badge {
            font-weight: 500;
            padding: 0.4em 0.8em;
            border-radius: 20px;
            font-size: 0.8rem;
            color: white;
        }

        .bg-approved {
            background-color: #28a745 !important;
            color: white !important;
        }

        .bg-rejected {
            background-color: #dc3545 !important;
            color: white !important;
        }

        .bg-pending {
            background-color: #ffc107 !important;
            color: #333 !important;
        }

        .bg-pending-admin-review {
            background-color: #ffc107 !important;
            color: #333 !important;
        }

        .mb-4 {
            margin-bottom: 1rem !important;
        }

        .row .col-md-6 {
            padding-bottom: 0.5rem;
        }

        .view-document-btn {
            background-color: #007bff;
            color: #fff;
            border: none;
            border-radius: 5px;
            padding: 10px 15px;
            font-size: 16px;
            cursor: pointer;
            transition: background-color 0.3s ease, transform 0.1s ease;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            margin-top: 5px;
        }

            .view-document-btn:hover {
                background-color: #0056b3;
            }

            .view-document-btn:active {
                transform: translateY(1px);
            }

        textarea[readonly] {
            background-color: #f8f9fa;
            border-color: #e0e6ed;
            cursor: default;
        }

            /* This is the key fix for the hover state */

            textarea[readonly]:hover {
                background-color: #f8f9fa;
                border-color: #e0e6ed;
            }

            /* This is the key fix for the click/focus state */

            textarea[readonly]:focus {
                background-color: #f8f9fa;
                border-color: #e0e6ed;
                box-shadow: none; /* Removes the blue glow/shadow */

                outline: none; /* Removes the default outline */
            }
    </style>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark mb-4">
        <div class="container-fluid d-flex justify-content-between align-items-center">
            <div class="d-flex align-items-center">
                <img src="https://cdn-icons-png.flaticon.com/128/2966/2966486.png" style="width:30px; height:30px" alt="Claim Adjuster Logo" />
                <a class="navbar-brand ms-2" href="#">Claim Adjuster Portal</a>
            </div>
            <a href="@Url.Action("Index", "Home")" class="logout-btn">
                <i class="fas fa-sign-out-alt"></i> Logout
            </a>
        </div>
    </nav>

    <div class="container">
        <h2>Claim Details</h2>

        @{

            bool isEditable = Model.ClaimStatus.ToLower() == "pending";

        }
        <form asp-action="UpdateClaimDetails" asp-route-id="@Model.ClaimId" method="post">
            <input type="hidden" asp-for="ClaimId" />
            <input type="hidden" asp-for="PolicyId" />
            <input type="hidden" asp-for="ClaimAmount" />
            <input type="hidden" asp-for="ClaimDate" />
            <input type="hidden" asp-for="UserId" />
            <input type="hidden" asp-for="DescriptionofIncident" />

            @Html.AntiForgeryToken()

            <div class="row">
                <div class="col-md-6 mb-4">
                    <div class="details-label">Policy Holder Name:</div>
                    <div class="details-value">@Html.DisplayFor(model => model.User.Username)</div>
                </div>
                <div class="col-md-6 mb-4">
                    <div class="details-label">Policy Name:</div>
                    <div class="details-value">@Html.DisplayFor(model => model.Policy.PolicyName)</div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 mb-4">
                    <div class="details-label">Claim Amount:</div>
                    <div class="details-value">₹ @Html.DisplayFor(model => model.ClaimAmount)</div>
                </div>
                <div class="col-md-6 mb-4">
                    <div class="details-label">Claim Date:</div>
                    <div class="details-value">@Html.DisplayFor(model => model.ClaimDate)</div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6 mb-4">
                    <div class="details-label">Current Status:</div>
                    <div class="details-value">

                        @{

                            string statusClass = "";

                            switch (Model.ClaimStatus.ToLower())

                            {

                                case "approved":

                                    statusClass = "bg-approved";

                                    break;

                                case "rejected":

                                    statusClass = "bg-rejected";

                                    break;

                                case "pending":

                                case "pending admin review":

                                    statusClass = "bg-pending";

                                    break;

                                default:

                                    statusClass = "bg-secondary";

                                    break;

                            }

                        }
                        <span class="status-badge @statusClass">

                            @Html.DisplayFor(model => model.ClaimStatus)
                        </span>
                    </div>
                </div>
            </div>

            <div class="mb-4">
                <div class="details-label">Description of Incident:</div>
                <div class="details-value">@Html.DisplayFor(model => model.DescriptionofIncident)</div>
            </div>

            <div class="mb-4">
                <label asp-for="AdjusterNotes" class="form-label">Adjuster Notes</label>

                @if (isEditable)

                {
    <textarea asp-for="AdjusterNotes" class="form-control" rows="4"></textarea>

                }

                else

                {
    <textarea asp-for="AdjusterNotes" class="form-control" rows="4" readonly></textarea>

                }
                <span asp-validation-for="AdjusterNotes" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <span class="details-label">Documents:</span>

                @if (Model.Documents != null && Model.Documents.Any())

                {
                    <div class="d-flex flex-wrap gap-2">

                        @foreach (var doc in Model.Documents)

                        {

                            @* <a href="@Url.Action("ViewDocument", "ClaimAdjuster", new { documentPath = doc.DocumentPath })" class="view-document-btn" target="_blank">

                                View Document
</a> *@
                            <button type="button" class="view-document-btn" onclick="window.open('@doc.DocumentPath', '_blank')">

                                View Document
                            </button>

                        }
                    </div>

                }

                else

                {
                    <p>No documents attached.</p>

                }
            </div>

            <div class="col-md-6 mb-4">
                <div class="mb-4">
                    <label asp-for="ClaimStatus" class="form-label">Update Status</label>
                    <div class="col-md-6 mb-4">
                        <div class="mb-4">

                            @* <label asp-for="ClaimStatus" class="form-label">Update Status</label> *@

                            @if (isEditable)

                            {
                                <select asp-for="ClaimStatus" class="form-select" id="claim-status" style="width: 500px">
                                    <option value="pending admin review">Pending Admin Review</option>
                                    <option value="Rejected">Rejected</option>
                                </select>

                            }

                            else

                            {
                                <select asp-for="ClaimStatus" id="claim-status" class="form-select" disabled>
                                    <option value="pending admin review">Pending Admin Review</option>
                                    <option value="Rejected">Rejected</option>
                                </select>

                            }
                            <span asp-validation-for="ClaimStatus" class="text-danger"></span>
                        </div>
                    </div>
                    <span asp-validation-for="ClaimStatus" class="text-danger"></span>
                </div>
            </div>

            <div class="d-flex justify-content-between mt-4">
                <a asp-action="Index" class="btn btn-secondary btn-back">Back to List</a>
                <button type="submit" class="btn btn-primary" id="save-button" @(isEditable ? "" : "disabled")>Save Changes</button>
            </div>
        </form>
        <div id="status-message" class="mt-3"></div>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/js/bootstrap.bundle.min.js"></script>
    <script>

        $(document).ready(function () {

            var isFormSubmitted = false;

            var saveButton = $('#save-button');

            var form = $('form');

            var formInputs = form.find('input, select, textarea').not(saveButton);

            // Disable the Save Changes button initially if the form is not editable

            if (!@isEditable.ToString().ToLower()) {

                saveButton.prop('disabled', true);

            }

            form.submit(function (e) {

                e.preventDefault();

                if (isFormSubmitted) {

                    return;

                }

                isFormSubmitted = true;

                saveButton.prop('disabled', true).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Saving...');

                var url = form.attr('action');

                $.ajax({

                    type: "POST",

                    url: url,

                    data: form.serialize(),

                    success: function (response) {

                        var statusMessage = $('#status-message');

                        if (response.success) {

                            statusMessage.removeClass('text-danger').addClass('text-success').text(response.message);

                            saveButton.html('<i class="fas fa-check"></i> Saved');

                            formInputs.prop('disabled', true);

                            // Check if this window was opened from another window and if it's still open

                            if (window.opener && !window.opener.closed) {

                                var updatedClaimId = @Model.ClaimId;

                                var newStatus = $('[name="ClaimStatus"]').val();

                                // Call the update function on the opener window

                                window.opener.updateClaimStatus(updatedClaimId, newStatus);

                            }

                        } else {

                            statusMessage.removeClass('text-success').addClass('text-danger').text(response.message);

                            saveButton.prop('disabled', false).html('Save Changes');

                            isFormSubmitted = false;

                        }

                    },

                    error: function (xhr, status, error) {

                        $('#status-message').removeClass('text-success').addClass('text-danger').text("An error occurred while saving changes.");

                        saveButton.prop('disabled', false).html('Save Changes');

                        isFormSubmitted = false;

                    }

                });

            });

        });
    </script>
</body>
</html>
